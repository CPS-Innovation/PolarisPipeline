name: Rumpole Pipeline Build
on:
  pull_request:
  push:
    branches:
      - main
      - feature/**
      - bug/**
      - feature/12690-terraform-level0/**
  workflow_dispatch:
permissions: write-all
jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      coordinator: ${{ steps.filter.outputs.coordinator }}
      pdfgenerator: ${{ steps.filter.outputs.pdfgenerator }}
      textextractor: ${{ steps.filter.outputs.textextractor }}
      runtests: ${{ steps.filter.outputs.coordinator }} | ${{ steps.filter.outputs.pdfgenerator }} | ${{ steps.filter.outputs.textextractor }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          # Make sure the actual branch is checked out when running on pull requests
          ref: ${{ github.head_ref }}
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            coordinator:
              - 'coordinator/**'
            pdfgenerator:
              - 'pdf-generator/**'
            textextractor:
              - 'text-extractor/**'

  # JOB to build and test coordinator code
  coordinator:
    needs: changes
    if: ${{ needs.changes.outputs.coordinator == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          # Make sure the actual branch is checked out when running on pull requests
          ref: ${{ github.head_ref }}
      - name: Use .NET Core sdk
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build coordinator/coordinator.csproj --configuration Release --no-restore
      - name: Publish
        run: dotnet publish coordinator/coordinator.csproj --configuration Release --output ${{ github.workspace }}/coordinator-drop
      - uses: actions/upload-artifact@v2
        with:
          path: ${{ github.workspace }}/coordinator-drop
          name: coordinator-drop

  # JOB to build and test pdf-generator code
  pdfgenerator:
    needs: changes
    if: ${{ needs.changes.outputs.pdfgenerator == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          # Make sure the actual branch is checked out when running on pull requests
          ref: ${{ github.head_ref }}
      - name: Use .NET Core sdk
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build pdf-generator/pdf-generator.csproj --configuration Release --no-restore
      - name: Publish
        run: dotnet publish pdf-generator/pdf-generator.csproj --configuration Release --output ${{ github.workspace }}/pdf-generator-drop
      - uses: actions/upload-artifact@v2
        with:
          path: ${{ github.workspace }}/pdf-generator-drop
          name: pdf-generator-drop

  # JOB to build and test text-extractor code
  textextractor:
    needs: changes
    if: ${{ needs.changes.outputs.textextractor == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          # Make sure the actual branch is checked out when running on pull requests
          ref: ${{ github.head_ref }}
      - name: Use .NET Core sdk
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build text-extractor/text-extractor.csproj --configuration Release --no-restore
      - name: Publish
        run: dotnet publish text-extractor/text-extractor.csproj --configuration Release --output ${{ github.workspace }}/text-extractor-drop
      - uses: actions/upload-artifact@v2
        with:
          path: ${{ github.workspace }}/text-extractor-drop
          name: text-extractor-drop

  runtests:
    needs: changes
    if: ${{ needs.changes.outputs.runtests == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          # Make sure the actual branch is checked out when running on pull requests
          ref: ${{ github.head_ref }}
      - name: Use .NET Core sdk
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Install dependencies
        run: dotnet restore
      - name: Run tests
        run: dotnet test rumpolepipeline.tests/rumpolepipeline.tests.csproj --configuration Release /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=lcov
      - name: Publish coverage report to coveralls.io
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: rumpolepipeline.tests/TestResults/coverage.info
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
